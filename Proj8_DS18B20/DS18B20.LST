C51 COMPILER V9.01   DS18B20                                                               08/09/2016 10:59:30 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: C:\Installed\keil51\C51\BIN\C51.EXE DS18B20.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <DS18B20.h>
   2          sbit DQ  = P3^4;
   3          unsigned char time;     //用于延时
   4          
   5          void delayms(uchar t)
   6          {
   7   1              uchar i;
   8   1              while(t--)
   9   1              {
  10   2                      for(i=0;i<123;i++);
  11   2              }
  12   1      }
  13          
  14          bit Init_DS18B20(void)
  15          {
  16   1              bit flag;
  17   1              DQ=1;
  18   1              _nop_(); 
  19   1              DQ=0;                                   //拉低数据总线
  20   1              for(time=0;time<200;time++);            //延时480~960us 主机产生复位信号
  21   1              DQ=1;                                   //拉高电平释放总线
  22   1              for(time=0;time<15;time++);             //等待16~60us   
  23   1              flag=DQ;                                //读取传感器响应的复位信号 低电平
  24   1              for(time=0;time<200;time++);            //延时等待通信结束
  25   1              return flag;
  26   1      }
  27          void WriteOneChar(uchar dat)
  28          {
  29   1              uchar i=0;
  30   1              for(i=0;i<8;i++)
  31   1              {
  32   2                      DQ=1;
  33   2                      _nop_();
  34   2                      DQ=0;                           //拉低数据总线
  35   2                      _nop_();                        //延时约1us时间
  36   2                      DQ=dat&0x01;            //输出数据电平
  37   2                      for(time=0;time<15;time++);     //延时约60us，DS18B20在15~60us对数据采样
  38   2                      DQ=1;                           //释放数据线
  39   2                      for(time=0;time<1;time++);      //延时4us，两个写时序间至少需要1us的恢复期
  40   2                      dat>>=1;
  41   2              }
  42   1              for(time=0;time<4;time++);
  43   1      }
  44          
  45          uchar ReadOneChar(void)
  46          {
  47   1              uchar i=0;
  48   1              uchar dat;
  49   1              for(i=0;i<8;i++)
  50   1              {
  51   2                      DQ=1;
  52   2                      _nop_();
  53   2                      DQ=0;                           //拉低数据总线
  54   2                      _nop_();
  55   2                      DQ=1;                           //人为拉高释放总线信号，为单片机检测DS18B20的输出电平做准备
C51 COMPILER V9.01   DS18B20                                                               08/09/2016 10:59:30 PAGE 2   

  56   2                      for(time=0;time<2;time++);      //延时约8us 单片机在上面开始拉低起15us内对数据总线信号进行采集
  57   2                      dat>>=1;
  58   2                      if(DQ==1) dat|=0x80;
  59   2                      else dat|=0x00;
  60   2                      for(time=0;time<15;time++);     //延时约60us，两个读时序间至少需要60us 
  61   2              }
  62   1              return dat;
  63   1      }
  64          
  65          uint ReadyReadTemp(void)
  66          {
  67   1              uchar Temp_H, Temp_L;   //用于存储温度的高8位和低8位
  68   1              uint Temp; 
  69   1              Init_DS18B20();                 //复位
  70   1              WriteOneChar(0xcc);             //跳过ROM
  71   1              WriteOneChar(0x44);             //发送温度变换指令
  72   1              delayms(200);                   //等待200ms
  73   1              Init_DS18B20();                 //复位
  74   1              WriteOneChar(0xcc);             //跳过ROM读写
  75   1              WriteOneChar(0xbe);             //发送开始读取温度数据指令
  76   1              Temp_L = ReadOneChar(); //先读低8位数据
  77   1              Temp_H = ReadOneChar(); //再读高8位数据
  78   1              Temp = (Temp_H<<8)+Temp_L;
  79   1              if(Temp>0x8000)
  80   1              {
  81   2                      return (~Temp)+1; //温度为负值 18B20输出为补码
  82   2              }else{
  83   2                      return Temp;
  84   2              }
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
